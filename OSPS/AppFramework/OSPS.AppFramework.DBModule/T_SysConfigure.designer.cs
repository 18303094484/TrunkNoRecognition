#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行库版本:2.0.50727.1873
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------

namespace OSPS.AppFramework.DBModule
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[System.Data.Linq.Mapping.DatabaseAttribute(Name="OSPS")]
	public partial class T_SysConfigureDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertT_SysConfigure(T_SysConfigure instance);
    partial void UpdateT_SysConfigure(T_SysConfigure instance);
    partial void DeleteT_SysConfigure(T_SysConfigure instance);
    #endregion
		
		public T_SysConfigureDataContext() : 
				base(global::OSPS.AppFramework.DBModule.Properties.Settings.Default.OSPSConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public T_SysConfigureDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public T_SysConfigureDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public T_SysConfigureDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public T_SysConfigureDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<T_SysConfigure> T_SysConfigure
		{
			get
			{
				return this.GetTable<T_SysConfigure>();
			}
		}
	}
	
	[Table(Name="dbo.T_SysConfigure")]
	public partial class T_SysConfigure : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _F_Id;
		
		private string _F_Name;
		
		private string _F_Value;
		
		private string _F_Description;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnF_IdChanging(int value);
    partial void OnF_IdChanged();
    partial void OnF_NameChanging(string value);
    partial void OnF_NameChanged();
    partial void OnF_ValueChanging(string value);
    partial void OnF_ValueChanged();
    partial void OnF_DescriptionChanging(string value);
    partial void OnF_DescriptionChanged();
    #endregion
		
		public T_SysConfigure()
		{
			OnCreated();
		}
		
		[Column(Storage="_F_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int F_Id
		{
			get
			{
				return this._F_Id;
			}
			set
			{
				if ((this._F_Id != value))
				{
					this.OnF_IdChanging(value);
					this.SendPropertyChanging();
					this._F_Id = value;
					this.SendPropertyChanged("F_Id");
					this.OnF_IdChanged();
				}
			}
		}
		
		[Column(Storage="_F_Name", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string F_Name
		{
			get
			{
				return this._F_Name;
			}
			set
			{
				if ((this._F_Name != value))
				{
					this.OnF_NameChanging(value);
					this.SendPropertyChanging();
					this._F_Name = value;
					this.SendPropertyChanged("F_Name");
					this.OnF_NameChanged();
				}
			}
		}
		
		[Column(Storage="_F_Value", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string F_Value
		{
			get
			{
				return this._F_Value;
			}
			set
			{
				if ((this._F_Value != value))
				{
					this.OnF_ValueChanging(value);
					this.SendPropertyChanging();
					this._F_Value = value;
					this.SendPropertyChanged("F_Value");
					this.OnF_ValueChanged();
				}
			}
		}
		
		[Column(Storage="_F_Description", DbType="NVarChar(128) NOT NULL", CanBeNull=false)]
		public string F_Description
		{
			get
			{
				return this._F_Description;
			}
			set
			{
				if ((this._F_Description != value))
				{
					this.OnF_DescriptionChanging(value);
					this.SendPropertyChanging();
					this._F_Description = value;
					this.SendPropertyChanged("F_Description");
					this.OnF_DescriptionChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
